{"version":3,"sources":["App.js","index.js"],"names":["App","height","setHeight","useState","weight","setWeight","output","useMemo","calculateHeight","toFixed","React","createElement","className","type","step","min","max","onChange","event","target","value","console","log","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LAmDeA,MAhDHA,KACV,MAAOC,EAAQC,GAAaC,mBAAS,MAC9BC,EAAQC,GAAaF,mBAAS,IAcrC,MAAMG,EAASC,kBAAQ,KACrB,MAAMC,EAAkBP,EAAQ,IAEhC,OAAQG,GAAQI,EAAgBA,IAAkBC,QAAQ,IAC1D,CAACL,EAAOH,IACV,OACES,IAAAC,cAAA,YACED,IAAAC,cAAA,UAAI,6BACJD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,KAAGC,UAAU,iBAAgB,UAAQR,EAAO,OAC5CM,IAAAC,cAAA,SACEC,UAAU,eACVC,KAAK,QACLC,KAAK,IACLC,IAAI,KACJC,IAAI,MACJC,SA3BR,SAAwBC,GACpBb,EAAUa,EAAMC,OAAOC,OACvBC,QAAQC,IAAIlB,MA2BVM,IAAAC,cAAA,KAAGC,UAAU,iBAAgB,WAASX,EAAO,MAC7CS,IAAAC,cAAA,SAAOC,UAAU,eAAeC,KAAK,QACrCI,SA1BN,SAAwBC,GACtBhB,EAAUgB,EAAMC,OAAOC,OACvBC,QAAQC,IAAIrB,IAyBRc,IAAI,MACJC,IAAI,SAENN,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,SAAG,gBACHD,IAAAC,cAAA,KAAGC,UAAU,UAAUN,MCvClBiB,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjB,IAAAC,cAACD,IAAMkB,WAAU,KACflB,IAAAC,cAACX,EAAG","file":"static/js/main.2afc038a.chunk.js","sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  const [height, setHeight] = useState(180);\r\n  const [weight, setWeight] = useState(70);\r\n\r\n\r\n  function onWeightChange(event){\r\n      setWeight(event.target.value);\r\n      console.log(weight)\r\n  }\r\n\r\n  function onHeightChange(event){\r\n    setHeight(event.target.value)\r\n    console.log(height)\r\n  }\r\n\r\n\r\n  const output = useMemo(()=>{\r\n    const calculateHeight = height /100;\r\n\r\n    return (weight/(calculateHeight*calculateHeight)).toFixed(1)\r\n  },[weight,height]);\r\n  return (\r\n    <main>\r\n      <h1>Project 4: BMI Calculator</h1>\r\n      <div className=\"input-section\">\r\n        <p className=\"slider-output\">Weight:{weight} kg</p>\r\n        <input\r\n          className=\"input-slider\"\r\n          type=\"range\"\r\n          step=\"1\"\r\n          min=\"40\"\r\n          max=\"200\"\r\n          onChange={onWeightChange}\r\n        />\r\n        <p className=\"slider-output\">Height: {height}cm</p>\r\n        <input className=\"input-slider\" type=\"range\" \r\n        onChange={onHeightChange}\r\n        min='140'\r\n        max='220'/>\r\n      </div>\r\n      <div className=\"output-section\">\r\n        <p>Your BMI is </p>\r\n        <p className=\"output\">{output}</p>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n//import reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n"],"sourceRoot":""}